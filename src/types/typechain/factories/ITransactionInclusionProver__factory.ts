/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ITransactionInclusionProver,
  ITransactionInclusionProverInterface,
} from "../ITransactionInclusionProver";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "parentHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "sha3Uncles",
                type: "bytes32",
              },
              {
                internalType: "address",
                name: "miner",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "stateRoot",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "transactionsRoot",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "receiptsRoot",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "logsBloom",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "difficulty",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "number",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gasUsed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "timestamp",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
              {
                internalType: "bytes32",
                name: "mixHash",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "nonce",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "baseFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "withdrawalsRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct BlockData",
            name: "blockData",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "receiptType",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "postStateOrStatus",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "cumulativeGasUsed",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "keyIndex",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "bloom",
                type: "bytes",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "addr",
                    type: "address",
                  },
                  {
                    internalType: "bytes[]",
                    name: "topics",
                    type: "bytes[]",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct TxLog[]",
                name: "logs",
                type: "tuple[]",
              },
            ],
            internalType: "struct TxReceipt",
            name: "txReceipt",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "bytes[]",
            name: "receiptProofBranch",
            type: "bytes[]",
          },
        ],
        internalType: "struct ProverDto",
        name: "data",
        type: "tuple",
      },
    ],
    name: "proveTransactionInclusion",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ITransactionInclusionProver__factory {
  static readonly abi = _abi;
  static createInterface(): ITransactionInclusionProverInterface {
    return new utils.Interface(_abi) as ITransactionInclusionProverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITransactionInclusionProver {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ITransactionInclusionProver;
  }
}
